def request_leave(request, id=None):
    current_user = request.user
    user = request.user.salesforceid
    def leaves():
            connection = postgressConnection()
            year = '2019.0'
            cursor = connection.cursor()
            strleave_type = "SELECT \"Leave_Type\", \"id\"  FROM  leave_management_leave_entitlement_utilization  WHERE \"Leave_Year\"='"+ year +"' AND \"Employee\"='"+ user +"'"
            cursor.execute(strleave_type)
            leave = cursor.fetchall()
            return leave
        
    leave = leaves()
    if Employee.objects.filter(email=(current_user.email)).exists():
        user_history = EmployeeLeaveRequest.objects.filter(employee = (current_user.salesforceid)).order_by('-Id')[:5]
        context={
            'user_history':user_history,
            'current_user': current_user,
            'leave': leave
            }

        #  WHO IS OUT-GET USER INSTANCE, AND DEPARTMENT UNIT
        user_sfid = current_user.salesforceid
        employee = Employee.objects.get(Id=user_sfid)
        employee_department_unit_id = employee.Sanergy_Department_Unit

        # THE, GRAB LEAVES THAT SHARE THE DEPARTMENT UNIT WITH THE CURRENT USER
        # LEAVES TO SHOW, SAME DEPARTMENT, APPROVED BY HR, NOT OVER NY END DAY TODAY
        hr_approved_leaves =  EmployeeLeaveRequest.objects.filter(
            employee_s_department = employee_department_unit_id,
            approval_status = "Approved by HR",
            leave_end_date__lt = datetime.date.today())
        pending_approval_leaves =  EmployeeLeaveRequest.objects.filter(
            employee_s_department = employee_department_unit_id,
            approval_status = "Pending Approval",
            leave_end_date__lt = datetime.date.today())

        colleagues_leaves = hr_approved_leaves | pending_approval_leaves
        for leaves in colleagues_leaves:
            print(leaves.employee)
            print(leaves.approval_status)
            print(leaves.leave_start_date)
            print(leaves.leave_end_date)

            print(colleagues_leaves.count())

        context['colleagues_leaves'] = colleagues_leaves
        print(context)

    return render(request, 'registration/request.html', context)